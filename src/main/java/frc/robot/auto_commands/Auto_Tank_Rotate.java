// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

package frc.robot.auto_commands;

import edu.wpi.first.wpilibj.command.Command;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;
import frc.robot.Robot;



/**
 *
 */
public class Auto_Tank_Rotate extends Command {

    private double m_autorotateangle;
    private double m_leftpower;
    private double m_rightpower;
    private double m_timeout;

    public Auto_Tank_Rotate(double AutoRotateAngle, double LeftPower, double RightPower, double TimeOut ) {

        m_autorotateangle = AutoRotateAngle;
        m_leftpower = LeftPower;
        m_rightpower = RightPower;
        m_timeout = TimeOut;

        requires(Robot.drive);

    }

    // Called just before this Command runs the first time
    protected void initialize() {

    	setTimeout(m_timeout);

    }

    // Called repeatedly when this Command is scheduled to run
    protected void execute() {

    	
    	if (Math.abs(m_autorotateangle - Robot.drive.gyroGetAngle())  < 5) {
    		Robot.drive.driveTank(m_leftpower /1.5, m_rightpower /1.5);
    	} else {
    		Robot.drive.driveTank(m_leftpower, m_rightpower);
    	}
    	
       	//SmartDashboard.putNumber("NavX getYaw", Robot.navX.getYaw());
    }

    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
        return (Math.abs(m_autorotateangle - Robot.drive.gyroGetAngle())  < 2) || (isTimedOut());
        //return true;
    }

    // Called once after isFinished returns true
    protected void end() {
    	///Robot.driveTrain.driveStop();
       // Robot.drive.driveshighgear();
    //	SmartDashboard.putNumber("EndAngle", Robot.drive.gyroGetAngle());
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
    	end();
    }
}
